#数据库配置
spring:
  profiles:
    active: dev
  datasource:
    druid:
      url: jdbc:mysql://192.168.5.101:3306/spring-cloud-alibaba?allowMultiQueries=true&useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT
      driver-class-name: com.mysql.cj.jdbc.Driver
      username: root
      password: root
#    name: master
#    type: com.alibaba.druid.pool.DruidDataSource
#    druid:
#      #初始化大小、最小、最大
#      initial-size: 5
#      min-idle: 5
#      max-active: 20
#      #配置获取连接等待超时的时间
#      max-wait: 60000
#      #配置间隔多久才进行一次检测，检测需要关闭空闲连接，单位是毫秒
#      time-between-eviction-runs-millis: 60000
#      validation-query: SELECT 1 FROM DUAL
#      test-while-idle: true
#      test-on-borrow: false
#      test-on-return: false
#      #打开PSCache，并且指定每个连接上PSCache的大小
#      pool-prepared-statements: true
#      #配置监控统计拦截的filters，去掉后监控界面sql无法统计，“wall”用于防火墙
#      max-pool-prepared-statement-per-connection-size: 20
#      filters: stat,wall,log4j
#      # 合并多个DruidDataSource的监控数据
#      use-global-data-source-stat: true
#      #通过connectProperties属性来打开mergeSql功能；慢SQL记录
#      #connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#      # 配置监控服务器
#      stat-view-servlet:
#        enabled: true
#        login-username: admin
#        login-password: admin_pwd
#        reset-enable: false
#        url-pattern: /druid/*
#        # 添加IP白名单
#        allow: 127.0.0.1
#        # 添加IP黑名单，当白名单和黑名单重复时，黑名单优先级更高
#        #deny:
#      web-stat-filter:
#        enabled: true
#        # 添加过滤规则
#        url-pattern: /*
#        # 忽略过滤格式
#        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
#        session-stat-max-count: 1000
#        session-stat-enable: true
#        profile-enable: true

seata:
  enabled: true
  application-id: ${spring.application.name}
  tx-service-group: order_tx_group
  enable-auto-data-source-proxy: false
  data-source-proxy-mode: AT
  use-jdk-proxy: false
  scan-packages: firstPackage,secondPackage
  excludes-for-scanning: firstBeanNameForExclude,secondBeanNameForExclude
  excludes-for-auto-proxying:
  client:
    rm:
      async-commit-buffer-limit: 10000
      report-retry-count: 5
      table-meta-check-enable: false
      report-success-enable: false
      saga-branch-register-enable: false
      saga-json-parser: fastjson
      saga-retry-persist-mode-update: false
      saga-compensate-persist-mode-update: false
      tcc-action-interceptor-order: -2147482648 #Ordered.HIGHEST_PRECEDENCE + 1000
      lock:
        retry-interval: 10
        retry-times: 30
        retry-policy-branch-rollback-on-conflict: true
    tm:
      commit-retry-count: 5
      rollback-retry-count: 5
      default-global-transaction-timeout: 60000
      degrade-check: false
      degrade-check-period: 2000
      degrade-check-allow-times: 10
      interceptor-order: -2147482648 #Ordered.HIGHEST_PRECEDENCE + 1000
    undo:
      data-validation: true
      log-serialization: jackson
      log-table: undo_log
      only-care-update-columns: true
      compress:
        enable: true
        type: zip
        threshold: 64k
    load-balance:
      type: RandomLoadBalance
      virtual-nodes: 10
  service:
    vgroup-mapping:
      order_tx_group: default
    grouplist:
      default: 192.168.5.101:8091
    enable-degrade: false
    disable-global-transaction: false
  transport:
    shutdown:
      wait: 3
    thread-factory:
      boss-thread-prefix: NettyBoss
      worker-thread-prefix: NettyServerNIOWorker
      server-executor-thread-prefix: NettyServerBizHandler
      share-boss-worker: false
      client-selector-thread-prefix: NettyClientSelector
      client-selector-thread-size: 1
      client-worker-thread-prefix: NettyClientWorkerThread
      worker-thread-size: default
      boss-thread-size: 1
    type: TCP
    server: NIO
    heartbeat: true
    serialization: seata
    compressor: none
    enable-client-batch-send-request: true
  config:
    type: nacos
    nacos:
      namespace: "6d37b8e9-2402-4693-b269-4676b673442d"
      server-addr: 192.168.5.101:8848
      group: DEFAULT_GROUP
      username: "nacos"
      password: "nacos"
      data-id: seata.properties
    custom:
      name: ""
  registry:
    type: nacos
    nacos:
      application: seata-server
      server-addr: 192.168.5.101:8848
      group : "DEFAULT_GROUP"
      namespace: "6d37b8e9-2402-4693-b269-4676b673442d"
      username: "nacos"
      password: "nacos"
    custom:
      name: ""
  log:
    exception-rate: 100
  tcc-fence:
    enable: true
    config:
      log-table-name: tcc_fence_log
      clean-mode: hour
      clean-period: 1